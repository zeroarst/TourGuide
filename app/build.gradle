apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

repositories {
    mavenCentral()
    maven() {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

Properties getGradleProperties() {
    def gradlePropsFile = file('../gradle.properties')
    def Properties gradleProps = new Properties()
    if (gradlePropsFile.canRead()) {
        gradleProps.load(new FileInputStream(gradlePropsFile))
        println gradleProps['VERSION_CODE']
        println gradleProps['VERSION_NAME']
    } else {
        throw new GradleException("Could not read gradle.properties!")
    }
    gradleProps;
}

android {
    compileSdkVersion compileSdkVersionNum
    buildToolsVersion buildToolVersionNum
    def gradleProps = getGradleProperties()
    defaultConfig {
        applicationId "tourguide.tourguide"
        minSdkVersion 11
        targetSdkVersion targetSdkVersionNum
        versionCode gradleProps['VERSION_CODE'].toInteger()
        versionName gradleProps['VERSION_NAME']
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile project(':tourguide')
//    compile ('com.github.worker8:tourguide:1.0.16-SNAPSHOT@aar'){
//        transitive=true
//    }

    /* this is for debugging memory leak: https://github.com/square/leakcanary */
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    // Set this dependency to build and run Espresso tests
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

//    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
//    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
//    androidTestCompile "com.android.support.test.espresso:espresso-idling-resource:$espressoVersion"
//    androidTestCompile "com.android.support.test.espresso:espresso-intents:$espressoVersion"
//    androidTestCompile "com.android.support:support-annotations:23.3.0"
//    androidTestCompile 'com.android.support.test:runner:0.5'

}

task print_git_tag_command << {
    def gradleProps = getGradleProperties()
    println "git tag -a v" + gradleProps['VERSION_NAME'] + " -m \"VERSION_CODE=" + gradleProps['VERSION_CODE'] + ", VERSION_NAME=" + gradleProps['VERSION_NAME'] + "\""
    println "git push --tags"
}

